import { createSlice } from '@reduxjs/toolkit'

const initialState = {
  isAnnouncement: true,
}

export const announcementSlice = createSlice({
  name: 'announcement',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    doCloseAnnoucement: (state, action) => {
      state.isAnnouncement = false
    },
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {},
})

export const { doCloseAnnoucement } = announcementSlice.actions

// The function below is called a selector and allows us to select a value from
// the state. Selectors can also be defined inline where they're used instead of
// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`

// We can also write thunks by hand, which may contain both sync and async logic.
// Here's an example of conditionally dispatching actions based on current state.

export default announcementSlice.reducer
